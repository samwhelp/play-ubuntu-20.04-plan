#!/usr/bin/env bash


################################################################################
### Head: Link
##

# * https://github.com/samwhelp/skel-project-plan/blob/gh-pages/demo/sh/standalone/bin/demo-ctrl
# * https://github.com/samwhelp/play-ubuntu-20.04-plan/blob/master/prototype/bspwm/config/compton/bin/bsp-compton

##
### Tail: Link
################################################################################


################################################################################
### Head: Note
##

##

##
### Tail: Note
################################################################################


################################################################################
### Head: Init
##
##set -e ## for Exit immediately if a command exits with a non-zero status.
THE_BASE_DIR_PATH=$(cd -P -- "$(dirname -- "$0")" && pwd -P)
THE_CMD_FILE_NAME=$(basename $0)
##
### Tail: Init
################################################################################


################################################################################
### Head: Util_Debug
##

util_debug_echo () {
	if is_debug; then
		echo "$@" 1>&2;
	fi
}

##
### Head: Util_Debug
################################################################################


################################################################################
### Head: Base
##
find_dir_path () {
	if [ ! -d $(dirname -- "$1") ]; then
		dirname -- "$1"
		return 1
	fi
	echo $(cd -P -- "$(dirname -- "$1")" && pwd -P)
}

##THIS_BASE_DIR_PATH=$(find_dir_path $0)

## $ export DEBUG_COMPTON_CTRL=true
is_debug () {
	if [ "$DEBUG_COMPTON_CTRL" = "true" ]; then
		return 0
	fi

	return 1
}

is_not_debug () {
	! is_debug
}

base_var_init () {

	#THE_PLAN_DIR_PATH=$(find_dir_path "$THE_BASE_DIR_PATH/../.")
	THE_PLAN_DIR_PATH=$(find_dir_path "$THE_BASE_DIR_PATH/.")


	THE_CMD_VERSION='0.1'

	THE_CMD_DIR_PATH="${THE_BASE_DIR_PATH}"

	if [ "none${THE_CMD_FILE_NAME}" = 'none' ]; then
		THE_CMD_FILE_NAME="bsp-compton"
	fi

	THE_CMD_FILE_PATH="${THE_CMD_DIR_PATH}/$THE_CMD_FILE_NAME"

	## https://github.com/samwhelp/play-ubuntu-20.04-plan/blob/master/prototype/bspwm/config/compton/bin/bsp-compton
	THE_SELF_UPDATE_URL='https://raw.githubusercontent.com/samwhelp/play-ubuntu-20.04-plan/master/prototype/bspwm/config/compton/bin/bsp-compton'


	THE_TMP_DIR_PATH="/tmp"


	THE_ASSET_DIR_NAME="asset"
	THE_ASSET_DIR_PATH="$THE_PLAN_DIR_PATH/$THE_ASSET_DIR_NAME"

	THE_VAR_DIR_NAME="var"
	THE_VAR_DIR_PATH="$THE_PLAN_DIR_PATH/$THE_VAR_DIR_NAME"


	THE_PROFILE_DIR_NAME=".${THE_CMD_FILE_NAME}-profile"
	THE_PROFILE_DIR_PATH="$HOME/$THE_PROFILE_DIR_NAME"

	THE_PROJECT_DIR_NAME="$THE_CMD_FILE_NAME"
	THE_PROJECT_DIR_PATH="$HOME/.local/share/$THE_PROJECT_DIR_NAME"

	THE_CONFIG_DIR_NAME="$THE_CMD_FILE_NAME"
	THE_CONFIG_DIR_PATH="$HOME/.config/$THE_CONFIG_DIR_NAME"

	THE_CACHE_DIR_NAME="$THE_CMD_FILE_NAME"
	THE_CACHE_DIR_PATH="$HOME/.cache/$THE_CACHE_DIR_NAME"


}

base_var_dump () {

	is_not_debug && return 0

	util_debug_echo
	util_debug_echo "################################################################################"
	util_debug_echo "### Head: var_dump"
	util_debug_echo "##"
	util_debug_echo "#"


	util_debug_echo "THE_PLAN_DIR_PATH=$THE_PLAN_DIR_PATH"

	util_debug_echo "THE_CMD_FILE_NAME=$THE_CMD_FILE_NAME"
	util_debug_echo "THE_CMD_FILE_PATH=$THE_CMD_FILE_PATH"
	util_debug_echo "THE_CMD_DIR_PATH=$THE_CMD_DIR_PATH"

	util_debug_echo "THE_SELF_UPDATE_URL=$THE_SELF_UPDATE_URL"


	util_debug_echo "THE_TMP_DIR_PATH=$THE_TMP_DIR_PATH"


	util_debug_echo "THE_ASSET_DIR_NAME=$THE_ASSET_DIR_NAME"
	util_debug_echo "THE_ASSET_DIR_PATH=$THE_ASSET_DIR_PATH"

	util_debug_echo "THE_VAR_DIR_NAME=$THE_VAR_DIR_NAME"
	util_debug_echo "THE_VAR_DIR_PATH=$THE_VAR_DIR_PATH"




	util_debug_echo "THE_PROFILE_DIR_NAME=$THE_PROFILE_DIR_NAME"
	util_debug_echo "THE_PROFILE_DIR_PATH=$THE_PROFILE_DIR_PATH"

	util_debug_echo "THE_PROJECT_DIR_NAME=$THE_PROJECT_DIR_NAME"
	util_debug_echo "THE_PROJECT_DIR_PATH=$THE_PROJECT_DIR_PATH"

	util_debug_echo "THE_CONFIG_DIR_NAME=$THE_CONFIG_DIR_NAME"
	util_debug_echo "THE_CONFIG_DIR_PATH=$THE_CONFIG_DIR_PATH"

	util_debug_echo "THE_CACHE_DIR_NAME=$THE_CACHE_DIR_NAME"
	util_debug_echo "THE_CACHE_DIR_PATH=$THE_CACHE_DIR_PATH"



	util_debug_echo "#"
	util_debug_echo "##"
	util_debug_echo "### Tail: var_dump"
	util_debug_echo "################################################################################"
	util_debug_echo
}


base_var_init

base_var_dump

##
### Tail: Base
################################################################################


################################################################################
### Head: Util_SubCmd
##

sub_cmd_find_function_name () {
	echo "sub_run_$1"
}

##
### Tail: Util_SubCmd
################################################################################


################################################################################
### Head: Util_Self_Update
##

util_make_bin_dir () {
	mkdir -p "$HOME/bin"
}

util_make_tmp_dir () {
	THE_TMP_DIR_PATH="/tmp/tmp.$$.$RANDOM"
	mkdir "$THE_TMP_DIR_PATH"
}

util_self_update_download_to_tmp_dir () {

	local tmp_file_path="${THE_TMP_DIR_PATH}/${THE_CMD_FILE_NAME}"

	wget -c "$THE_SELF_UPDATE_URL" -O "$tmp_file_path"

}

util_self_update_install_from_tmp_dir () {

	local tmp_file_path="${THE_TMP_DIR_PATH}/${THE_CMD_FILE_NAME}"

	echo "install -m 755 $tmp_file_path $THE_CMD_FILE_PATH"
	install -m 755 "$tmp_file_path" "$THE_CMD_FILE_PATH"

}

util_self_update_check_cmd_exists () {

	if ! [ -f "$THE_CMD_FILE_PATH" ]; then ## file not exists
		return 0
	fi


	echo "File is exists:" "$THE_CMD_FILE_PATH"
	echo

	echo "Try to backup:"
	echo

	local now=$(date +%Y%m%d_%s)
	local bak_dir_path="${THE_CMD_FILE_PATH}.bak"
	local bak_file_path="${bak_dir_path}/${THE_CMD_FILE_NAME}.bak.$now"

	mkdir -p $bak_dir_path

	mv -v "$THE_CMD_FILE_PATH" "${bak_file_path}"

	if [ "$?" != "0" ]; then
		echo
		echo 'Backup Failure!'
		exit 1
	fi

	echo

	return 0
}

util_self_update_print_version () {
	echo
	echo "Current Version:"

	"$THE_CMD_FILE_PATH" version
}

util_self_update () {

	util_make_bin_dir

	util_make_tmp_dir

	util_self_update_download_to_tmp_dir

	util_self_update_check_cmd_exists && util_self_update_install_from_tmp_dir


	util_self_update_print_version

}


main_version () {
	echo $THE_CMD_VERSION
}

util_self_actions () {
	grep '^sub_run' "${THE_CMD_FILE_PATH}" | cut -d ' ' -f 1 | awk -F 'sub_run_' '{print $2}' | sort -u
}

##
### Tail: Util_Self_Update
################################################################################




################################################################################
### Head: System
##

compton_sys_option_theme_file_check () {

	if ! [ -e "$HOME/.config/bspwm/compton/option/theme" ] ; then
		mkdir -p "$HOME/.config/bspwm/compton/option"
		echo 'default' > "$HOME/.config/bspwm/compton/option/theme"
	fi

}

compton_sys_theme_name_get () {

	compton_sys_option_theme_file_check

	cat "$HOME/.config/bspwm/compton/option/theme"
}

compton_sys_theme_name_set () {

	compton_sys_option_theme_file_check

	echo "$1" > "$HOME/.config/bspwm/compton/option/theme"
}

compton_sys_session_stop () {
	killall -q -9 compton
}

compton_sys_session_start () {
	bsp-compton-start
}

compton_sys_session_restart () {
	compton_sys_session_stop

	compton_sys_session_start
}

compton_sys_session_toggle () {
	if pgrep -x 'compton' > /dev/null; then
		compton_sys_session_stop
	else
		compton_sys_session_start
	fi

	## https://gitlab.com/dwt1/dotfiles/-/blob/master/.config/awesome/scripts/compton-toggle.sh
	## https://gitlab.com/dwt1/dotfiles.git
	## https://www.youtube.com/watch?v=qKtit_B7Keo

}


##
### Tail: System
################################################################################


################################################################################
### Head: Model / theme
##

compton_run_theme_help () {

	local cmd_name="$THE_CMD_FILE_NAME"

cat << EOF

Usage:

	## synopsis

		$ $cmd_name theme [name]


Example:

	## get

		$ $cmd_name theme

	## set

		$ $cmd_name theme 'default'
		$ $cmd_name theme 'basic'

EOF

}


compton_run_theme () {

	local theme="$1"

	if [ "none${theme}" = "none" ]; then
		compton_sys_theme_name_get
		return
	fi


	compton_sys_theme_name_set "$theme"

	compton_sys_session_restart

}

##
### Tail: Model / theme
################################################################################


################################################################################
### Head: Model / theme / list
##


compton_run_list () {

	ls -1 "$HOME/.config/bspwm/compton/theme/"

}


##
### Tail: Model / theme / list
################################################################################


################################################################################
### Head: SubCmd
##


sub_run_help () {
	main_usage
}

sub_run_version () {
	main_version
}

sub_run_self_update () {
	util_self_update
}

sub_run_self_actions () {
	util_self_actions
}




sub_run_start () {
	compton_sys_session_start
}

sub_run_stop () {
	compton_sys_session_stop
}

sub_run_restart () {
	compton_sys_session_restart
}

sub_run_toggle () {
	compton_sys_session_toggle
}






sub_run_theme () {
	#echo "sub_run_theme"
	compton_run_theme $@
}

sub_run_theme_help () {
	#echo "sub_run_theme_help"
	compton_run_theme_help $@
}





sub_run_list () {
	compton_run_list
}

sub_run_theme_list () {
	compton_run_list
}





##
### Tail: SubCmd
################################################################################


################################################################################
### Head: Main
##

main_usage () {
	##local cmd_name="$0"
	local cmd_name="$THE_CMD_FILE_NAME"

cat << EOF
Usage:

	## synopsis

		$ $cmd_name [action]

	## version

		$ $cmd_name version

	## self_update

		$ $cmd_name self_update

	## help

		$ $cmd_name help

	## control

		$ $cmd_name start
		$ $cmd_name stop
		$ $cmd_name restart
		$ $cmd_name toggle


	## list

		$ $cmd_name list
		$ $cmd_name theme_list

	## get or set

		$ $cmd_name theme [name]




Example:


	## theme / help

		$ $cmd_name theme_help

	## theme / list

		$ $cmd_name list
		$ $cmd_name theme_list

	## theme / get

		$ $cmd_name theme


	## theme / set

		$ $cmd_name theme 'default'
		$ $cmd_name theme 'basic'


Debug:
	$ export DEBUG_COMPTON_CTRL=true

EOF

}

main_check_args_size () {
	if [ $1 -le 0 ]; then
		shift
		main_run_default_sub_cmd "$@"
		exit 1
	fi
}

main_run_default_sub_cmd () {
	main_usage "$@"
}

main_run_sub_cmd () {

	local sub_cmd="$1"

	shift

	local args="$@"

	local function_name=$(sub_cmd_find_function_name "$sub_cmd")

	## if ! command -v $function_name > /dev/null; then
	if ! type -p $function_name; then
		util_debug_echo "[Debug] sub_cmd_function_not_exist: sub_cmd=$sub_cmd; function_name=$function_name"

		echo
		main_run_default_sub_cmd "$args"
		return 1
	fi

	"$function_name" "$args" ## run sub cmd function


}

## Start
main_check_args_size $# "$@"

main_run_sub_cmd "$@"

##
### Tail: Main
################################################################################
